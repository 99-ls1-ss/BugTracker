@model BugTracker.Models.TicketsModel
@{
    ViewBag.Menu = "Tickets";
    ViewBag.Title = "Edit Ticket Details";
}
<section class="section colored-wrapper">
    <div class="container">
        <div class="wrapper-2">

                @using(Html.BeginForm("Edit", "Tickets", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4><span>@ViewBag.Title</span></h4>
        <hr />
        <div class="row">
            <div class="col-md-2">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "text-right" })
            </div>
            <div class="col-md-7"></div>
            @if (User.IsInRole("Admin")) {
                <div class="col-md-3 text-right">
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = Model.Id })
                </div>
                }
                else {
                <div class="col-md-3"></div>
                }
        </div>
        <div class="row">
            <div class="container">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
               

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control ticket-input" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control ticket-textarea", @rows = 10, @cols = 30, @id = "tinyMceEditor" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
               
                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectId, "Project Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @*@Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control ticket-select" })*@
                        @Html.DisplayFor(model => model.Project.Name)
                        @*@Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })*@
                    </div>
                    @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control ticket-select" })
                        @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control ticket-select" })
                        @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.TicketStatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control ticket-select" })
                        @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (User.IsInRole("Admin") || (User.IsInRole("ProjectManager"))) {
                    <div class="form-group">
                        @Html.LabelFor(model => model.OwnerUserId, "Ticket Owner", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.HiddenFor(model=>model.OwnerUserId)
                            @Html.DisplayFor(model => model.OwnerUser.DisplayName)
                            @Html.ValidationMessageFor(model => model.OwnerUserId, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.AssignedToUserId, "Assigned To", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.HiddenFor(model => model.AssignedToUserId)
                            @Html.DropDownList("AssignedToUserId", null, htmlAttributes: new { @class = "form-control ticket-select" })
                            @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    }
                    else {
                    <div class="form-group">
                        @Html.LabelFor(model => model.OwnerUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 display-for-padding">
                            @Html.HiddenFor(model => model.OwnerUserId)
                            @Html.DisplayFor(model => model.OwnerUser.DisplayName, new { @class = "form-control ticket-input" })
                        </div>
                        @Html.LabelFor(model => model.AssignedToUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 display-for-padding">
                            @Html.HiddenFor(model => model.AssignedToUserId)
                            @Html.DisplayFor(model => model.AssignedToUser.DisplayName, new { @class = "form-control ticket-input" })
                        </div>
                    </div>
                    }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-flat flat-color" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    }

        </div>
    </div>
</section>